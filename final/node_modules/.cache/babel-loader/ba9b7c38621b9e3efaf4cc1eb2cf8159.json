{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\99596\\\\Desktop\\\\curriculum\\\\SDP\\\\FoodApp\\\\final\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport recommend from './recommend';\nimport { csv } from \"d3-fetch\";\nexport default function App() {\n  const questions = [{\n    questionText: 'What zones are you willing to venture out to?',\n    answerOptions: [{\n      answerText: 'A',\n      isCorrect: 'A'\n    }, {\n      answerText: 'B',\n      isCorrect: 'B'\n    }, {\n      answerText: 'C',\n      isCorrect: 'C'\n    }, {\n      answerText: 'D',\n      isCorrect: 'D'\n    }]\n  }, {\n    questionText: 'Boujie or Ballin’ on a Budget?',\n    answerOptions: [{\n      answerText: '$',\n      isCorrect: '$'\n    }, {\n      answerText: '$$',\n      isCorrect: '$$'\n    }, {\n      answerText: '$$$',\n      isCorrect: '$$$'\n    }, {\n      answerText: '$$$$',\n      isCorrect: '$$$$'\n    }, {\n      answerText: '$$$$$',\n      isCorrect: '$$$$$'\n    }]\n  }, {\n    questionText: 'Any cravings?',\n    answerOptions: [{\n      answerText: 'Italian',\n      isCorrect: 'Italian'\n    }, {\n      answerText: 'Chinese',\n      isCorrect: 'Chinese'\n    }, {\n      answerText: 'Indian',\n      isCorrect: 'Indian'\n    }, {\n      answerText: 'French',\n      isCorrect: 'French'\n    }, {\n      answerText: 'America',\n      isCorrect: 'America'\n    }, {\n      answerText: 'Japanese',\n      isCorrect: 'Japanese'\n    }, {\n      answerText: 'Thai',\n      isCorrect: 'Thai'\n    }, {\n      answerText: 'Brazilian',\n      isCorrect: 'Brazilian'\n    }, {\n      answerText: 'Mexican',\n      isCorrect: 'Mexican'\n    }]\n  }, {\n    questionText: 'Preferring Vegetarian?',\n    answerOptions: [{\n      answerText: 'Yes',\n      isCorrect: 'Yes'\n    }, {\n      answerText: 'No',\n      isCorrect: 'No'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [answers, setAnswers] = useState([]);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      answers.push(isCorrect);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    csv(\"../../dataset/dummy_data.csv\").then(data => {\n      setData(data);\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"You scored \", answers, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }, answerOption.answerText)))));\n}","map":{"version":3,"sources":["C:/Users/99596/Desktop/curriculum/SDP/FoodApp/final/src/App.js"],"names":["React","useState","recommend","csv","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","answers","setAnswers","handleAnswerOptionClick","push","nextQuestion","length","data","setData","useEffect","then","console","log","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport recommend from './recommend';\nimport { csv } from \"d3-fetch\";\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What zones are you willing to venture out to?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'A', isCorrect: 'A' },\n\t\t\t\t{ answerText: 'B', isCorrect: 'B' },\n\t\t\t\t{ answerText: 'C', isCorrect: 'C' },\n\t\t\t\t{ answerText: 'D', isCorrect: 'D' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Boujie or Ballin’ on a Budget?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '$', isCorrect: '$' },\n\t\t\t\t{ answerText: '$$', isCorrect: '$$', },\n\t\t\t\t{ answerText: '$$$', isCorrect: '$$$', },\n\t\t\t\t{ answerText: '$$$$', isCorrect: '$$$$', },\n\t\t\t\t{ answerText: '$$$$$', isCorrect: '$$$$$', },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Any cravings?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Italian', isCorrect: 'Italian' },\n\t\t\t\t{ answerText: 'Chinese', isCorrect: 'Chinese' },\n\t\t\t\t{ answerText: 'Indian', isCorrect: 'Indian' },\n\t\t\t\t{ answerText: 'French', isCorrect: 'French' },\n\t\t\t\t{ answerText: 'America', isCorrect: 'America' },\n\t\t\t\t{ answerText: 'Japanese', isCorrect: 'Japanese' },\n\t\t\t\t{ answerText: 'Thai', isCorrect: 'Thai' },\n\t\t\t\t{ answerText: 'Brazilian', isCorrect: 'Brazilian' },\n\t\t\t\t{ answerText: 'Mexican', isCorrect: 'Mexican' },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Preferring Vegetarian?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes', isCorrect: 'Yes' },\n\t\t\t\t{ answerText: 'No', isCorrect: 'No' },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [answers, setAnswers] = useState([]);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tanswers.push(isCorrect);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\tconst [data, setData] = useState();\n\tuseEffect(() => {\n\t\tcsv(\"../../dataset/dummy_data.csv\").then(data => {\n\t\t\tsetData(data);\n\t\t});\n\t}, [])\n\tconsole.log(data)\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {answers} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}