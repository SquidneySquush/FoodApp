{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sydne\\\\Documents\\\\Code\\\\FoodApp\\\\final\\\\src\\\\components\\\\Quiz.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\n\nclass Quiz extends Component {\n  /*  //const Quiz = () =>  {\r\n    //  questions() {\r\n    //    return (\r\n      //const questions = [ \r\n        {\r\n          questionText: 'What zones are you willing to venture out to?',\r\n          answerOptions: [\r\n            { answerText: 'A', isCorrect: 'A' },\r\n            { answerText: 'B', isCorrect: 'B' },\r\n            { answerText: 'C', isCorrect: 'C' },\r\n            { answerText: 'D', isCorrect: 'D' },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Boujie or Ballin’ on a Budget?',\r\n          answerOptions: [\r\n            { answerText: '$', isCorrect: '$' },\r\n            { answerText: '$$', isCorrect: '$$', },\r\n            { answerText: '$$$', isCorrect: '$$$', },\r\n            { answerText: '$$$$', isCorrect: '$$$$', },\r\n            { answerText: '$$$$$', isCorrect: '$$$$$', },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Any cravings?',\r\n          answerOptions: [\r\n            { answerText: 'Italian', isCorrect: 'Italian' },\r\n            { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n            { answerText: 'Indian', isCorrect: 'Indian' },\r\n            { answerText: 'French', isCorrect: 'French' },\r\n            { answerText: 'America', isCorrect: 'America' },\r\n            { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n            { answerText: 'Thai', isCorrect: 'Thai' },\r\n            { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n            { answerText: 'Mexican', isCorrect: 'Mexican' },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Preferring Vegetarian?',\r\n          answerOptions: [\r\n            { answerText: 'Yes', isCorrect: 'Yes' },\r\n            { answerText: 'No', isCorrect: 'No' },\r\n          ],\r\n        }\r\n      //];\r\n       );\r\n      }; \r\n    \r\n      const [currentQuestion, setCurrentQuestion] = useState(0);\r\n      const [showScore, setShowScore] = useState(false);\r\n      const [answers, setAnswers] = useState([]);\r\n    \r\n      const handleAnswerOptionClick = (isCorrect) => {\r\n        if (isCorrect) {\r\n          answers.push(isCorrect);\r\n        }\r\n    \r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n          setCurrentQuestion(nextQuestion);\r\n        } else {\r\n          setShowScore(true);\r\n        }\r\n      };\r\n  \r\n      console.log(\"I hate this\"); */\n  render() {\n    const questions = [{\n      questionText: 'What zones are you willing to venture out to?',\n      answerOptions: [{\n        answerText: 'A',\n        isCorrect: 'A'\n      }, {\n        answerText: 'B',\n        isCorrect: 'B'\n      }, {\n        answerText: 'C',\n        isCorrect: 'C'\n      }, {\n        answerText: 'D',\n        isCorrect: 'D'\n      }]\n    }, {\n      questionText: 'Boujie or Ballin’ on a Budget?',\n      answerOptions: [{\n        answerText: '$',\n        isCorrect: '$'\n      }, {\n        answerText: '$$',\n        isCorrect: '$$'\n      }, {\n        answerText: '$$$',\n        isCorrect: '$$$'\n      }, {\n        answerText: '$$$$',\n        isCorrect: '$$$$'\n      }, {\n        answerText: '$$$$$',\n        isCorrect: '$$$$$'\n      }]\n    }, {\n      questionText: 'Any cravings?',\n      answerOptions: [{\n        answerText: 'Italian',\n        isCorrect: 'Italian'\n      }, {\n        answerText: 'Chinese',\n        isCorrect: 'Chinese'\n      }, {\n        answerText: 'Indian',\n        isCorrect: 'Indian'\n      }, {\n        answerText: 'French',\n        isCorrect: 'French'\n      }, {\n        answerText: 'America',\n        isCorrect: 'America'\n      }, {\n        answerText: 'Japanese',\n        isCorrect: 'Japanese'\n      }, {\n        answerText: 'Thai',\n        isCorrect: 'Thai'\n      }, {\n        answerText: 'Brazilian',\n        isCorrect: 'Brazilian'\n      }, {\n        answerText: 'Mexican',\n        isCorrect: 'Mexican'\n      }]\n    }, {\n      questionText: 'Preferring Vegetarian?',\n      answerOptions: [{\n        answerText: 'Yes',\n        isCorrect: 'Yes'\n      }, {\n        answerText: 'No',\n        isCorrect: 'No'\n      }]\n    }];\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [answers, setAnswers] = useState([]);\n\n    const handleAnswerOptionClick = isCorrect => {\n      if (isCorrect) {\n        answers.push(isCorrect);\n      }\n\n      const nextQuestion = currentQuestion + 1;\n\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setShowScore(true);\n      }\n    };\n\n    console.log(\"I hate this\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \" hello \"), showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"You scored \", answers, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, answerOption.answerText)))));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/sydne/Documents/Code/FoodApp/final/src/components/Quiz.jsx"],"names":["React","Component","useState","useEffect","Quiz","render","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","answers","setAnswers","handleAnswerOptionClick","push","nextQuestion","length","console","log","map","answerOption"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\n\r\nclass Quiz extends Component { \r\n    \r\n/*  //const Quiz = () =>  {\r\n  //  questions() {\r\n  //    return (\r\n    //const questions = [ \r\n      {\r\n        questionText: 'What zones are you willing to venture out to?',\r\n        answerOptions: [\r\n          { answerText: 'A', isCorrect: 'A' },\r\n          { answerText: 'B', isCorrect: 'B' },\r\n          { answerText: 'C', isCorrect: 'C' },\r\n          { answerText: 'D', isCorrect: 'D' },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Boujie or Ballin’ on a Budget?',\r\n        answerOptions: [\r\n          { answerText: '$', isCorrect: '$' },\r\n          { answerText: '$$', isCorrect: '$$', },\r\n          { answerText: '$$$', isCorrect: '$$$', },\r\n          { answerText: '$$$$', isCorrect: '$$$$', },\r\n          { answerText: '$$$$$', isCorrect: '$$$$$', },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Any cravings?',\r\n        answerOptions: [\r\n          { answerText: 'Italian', isCorrect: 'Italian' },\r\n          { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n          { answerText: 'Indian', isCorrect: 'Indian' },\r\n          { answerText: 'French', isCorrect: 'French' },\r\n          { answerText: 'America', isCorrect: 'America' },\r\n          { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n          { answerText: 'Thai', isCorrect: 'Thai' },\r\n          { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n          { answerText: 'Mexican', isCorrect: 'Mexican' },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Preferring Vegetarian?',\r\n        answerOptions: [\r\n          { answerText: 'Yes', isCorrect: 'Yes' },\r\n          { answerText: 'No', isCorrect: 'No' },\r\n        ],\r\n      }\r\n    //];\r\n     );\r\n    }; \r\n  \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n  \r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        answers.push(isCorrect);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n\r\n    console.log(\"I hate this\"); */\r\n \r\n    render(){\r\n      const questions = [ \r\n        {\r\n          questionText: 'What zones are you willing to venture out to?',\r\n          answerOptions: [\r\n            { answerText: 'A', isCorrect: 'A' },\r\n            { answerText: 'B', isCorrect: 'B' },\r\n            { answerText: 'C', isCorrect: 'C' },\r\n            { answerText: 'D', isCorrect: 'D' },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Boujie or Ballin’ on a Budget?',\r\n          answerOptions: [\r\n            { answerText: '$', isCorrect: '$' },\r\n            { answerText: '$$', isCorrect: '$$', },\r\n            { answerText: '$$$', isCorrect: '$$$', },\r\n            { answerText: '$$$$', isCorrect: '$$$$', },\r\n            { answerText: '$$$$$', isCorrect: '$$$$$', },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Any cravings?',\r\n          answerOptions: [\r\n            { answerText: 'Italian', isCorrect: 'Italian' },\r\n            { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n            { answerText: 'Indian', isCorrect: 'Indian' },\r\n            { answerText: 'French', isCorrect: 'French' },\r\n            { answerText: 'America', isCorrect: 'America' },\r\n            { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n            { answerText: 'Thai', isCorrect: 'Thai' },\r\n            { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n            { answerText: 'Mexican', isCorrect: 'Mexican' },\r\n          ],\r\n        },\r\n        {\r\n          questionText: 'Preferring Vegetarian?',\r\n          answerOptions: [\r\n            { answerText: 'Yes', isCorrect: 'Yes' },\r\n            { answerText: 'No', isCorrect: 'No' },\r\n          ],\r\n        }\r\n      ];\r\n\r\n      const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n  \r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        answers.push(isCorrect);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n\r\n    console.log(\"I hate this\");\r\n    return (\r\n      \r\n      <div className='Quiz'>\r\n        <p> hello </p>\r\n        {showScore ? (\r\n          <div className='score-section'>\r\n            You scored {answers} out of {questions.length}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n   \r\n}\r\nexport default Quiz; "]},"metadata":{},"sourceType":"module"}