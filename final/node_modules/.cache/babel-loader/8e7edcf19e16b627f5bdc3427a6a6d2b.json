{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sydne\\\\Documents\\\\Code\\\\FoodApp\\\\final\\\\src\\\\components\\\\Quiz.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Recommend from '../http_fetch.js';\n\nconst Quiz = () => {\n  const questions = [{\n    questionText: 'What zones are you willing to venture out to?',\n    answerOptions: [{\n      answerText: 'A',\n      isCorrect: 'A'\n    }, {\n      answerText: 'B',\n      isCorrect: 'B'\n    }, {\n      answerText: 'C',\n      isCorrect: 'C'\n    }, {\n      answerText: 'D',\n      isCorrect: 'D'\n    }]\n  }, {\n    questionText: 'Boujie or Ballin’ on a Budget?',\n    answerOptions: [{\n      answerText: '$',\n      isCorrect: '$'\n    }, {\n      answerText: '$$',\n      isCorrect: '$$'\n    }, {\n      answerText: '$$$',\n      isCorrect: '$$$'\n    }, {\n      answerText: '$$$$',\n      isCorrect: '$$$$'\n    }, {\n      answerText: '$$$$$',\n      isCorrect: '$$$$$'\n    }]\n  }, {\n    questionText: 'Any cravings?',\n    answerOptions: [{\n      answerText: 'Italian',\n      isCorrect: 'Italian'\n    }, {\n      answerText: 'Chinese',\n      isCorrect: 'Chinese'\n    }, {\n      answerText: 'Indian',\n      isCorrect: 'Indian'\n    }, {\n      answerText: 'French',\n      isCorrect: 'French'\n    }, {\n      answerText: 'America',\n      isCorrect: 'America'\n    }, {\n      answerText: 'Japanese',\n      isCorrect: 'Japanese'\n    }, {\n      answerText: 'Thai',\n      isCorrect: 'Thai'\n    }, {\n      answerText: 'Brazilian',\n      isCorrect: 'Brazilian'\n    }, {\n      answerText: 'Mexican',\n      isCorrect: 'Mexican'\n    }]\n  }, {\n    questionText: 'Preferring Vegetarian?',\n    answerOptions: [{\n      answerText: 'Yes',\n      isCorrect: 'Yes'\n    }, {\n      answerText: 'No',\n      isCorrect: 'No'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [answers, setAnswers] = useState([]);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      answers.push(isCorrect);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Recommend, {\n    answers: answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onclick: \"location.href='localhost:3000'\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Finish\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, answerOption.answerText))))); //};\n};\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/sydne/Documents/Code/FoodApp/final/src/components/Quiz.jsx"],"names":["React","Component","useState","useEffect","Recommend","Quiz","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","answers","setAnswers","handleAnswerOptionClick","push","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\nimport Recommend from '../http_fetch.js';\r\n\r\n    \r\nconst Quiz = () =>  {\r\n\r\n    const questions = [ \r\n      {\r\n        questionText: 'What zones are you willing to venture out to?',\r\n        answerOptions: [\r\n          { answerText: 'A', isCorrect: 'A' },\r\n          { answerText: 'B', isCorrect: 'B' },\r\n          { answerText: 'C', isCorrect: 'C' },\r\n          { answerText: 'D', isCorrect: 'D' },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Boujie or Ballin’ on a Budget?',\r\n        answerOptions: [\r\n          { answerText: '$', isCorrect: '$' },\r\n          { answerText: '$$', isCorrect: '$$', },\r\n          { answerText: '$$$', isCorrect: '$$$', },\r\n          { answerText: '$$$$', isCorrect: '$$$$', },\r\n          { answerText: '$$$$$', isCorrect: '$$$$$', },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Any cravings?',\r\n        answerOptions: [\r\n          { answerText: 'Italian', isCorrect: 'Italian' },\r\n          { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n          { answerText: 'Indian', isCorrect: 'Indian' },\r\n          { answerText: 'French', isCorrect: 'French' },\r\n          { answerText: 'America', isCorrect: 'America' },\r\n          { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n          { answerText: 'Thai', isCorrect: 'Thai' },\r\n          { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n          { answerText: 'Mexican', isCorrect: 'Mexican' },\r\n        ],\r\n      },\r\n      {\r\n        questionText: 'Preferring Vegetarian?',\r\n        answerOptions: [\r\n          { answerText: 'Yes', isCorrect: 'Yes' },\r\n          { answerText: 'No', isCorrect: 'No' },\r\n        ],\r\n      },\r\n    ];\r\n  \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n  \r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        answers.push(isCorrect);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n\r\n   \r\n    return (\r\n    \r\n      <div className='Quiz'>\r\n       \r\n        {showScore ? (\r\n          <div className='score-section'>\r\n            <Recommend answers={answers}/> \r\n            <button onclick=\"location.href='localhost:3000'\">Finish</button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  //};\r\n   \r\n}\r\nexport default Quiz; "]},"metadata":{},"sourceType":"module"}