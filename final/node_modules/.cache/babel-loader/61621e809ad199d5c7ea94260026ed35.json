{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sydne\\\\Documents\\\\Code\\\\FoodApp\\\\final\\\\src\\\\components\\\\Quiz.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\n\nclass Quiz extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }\n    }, \"This is the Quiz.\");\n  }\n\n}\n\nexport default Quiz;\n/*  \r\n  static get questions() {\r\n    return ( \r\n      {\r\n        questionText: 'What zones are you willing to venture out to?',\r\n        answerOptions: [\r\n          { answerText: 'A', isCorrect: 'A' },\r\n          { answerText: 'B', isCorrect: 'B' },\r\n          { answerText: 'C', isCorrect: 'C' },\r\n          { answerText: 'D', isCorrect: 'D' }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Boujie or Ballin’ on a Budget?',\r\n        answerOptions: [\r\n          { answerText: '$', isCorrect: '$' },\r\n          { answerText: '$$', isCorrect: '$$', },\r\n          { answerText: '$$$', isCorrect: '$$$', },\r\n          { answerText: '$$$$', isCorrect: '$$$$', },\r\n          { answerText: '$$$$$', isCorrect: '$$$$$', }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Any cravings?',\r\n        answerOptions: [\r\n          { answerText: 'Italian', isCorrect: 'Italian' },\r\n          { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n          { answerText: 'Indian', isCorrect: 'Indian' },\r\n          { answerText: 'French', isCorrect: 'French' },\r\n          { answerText: 'America', isCorrect: 'America' },\r\n          { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n          { answerText: 'Thai', isCorrect: 'Thai' },\r\n          { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n          { answerText: 'Mexican', isCorrect: 'Mexican' }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Preferring Vegetarian?',\r\n        answerOptions: [\r\n          { answerText: 'Yes', isCorrect: 'Yes' },\r\n          { answerText: 'No', isCorrect: 'No' }\r\n        ]\r\n      }\r\n    )\r\n  }\r\n  \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n  \r\n    handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        answers.push(isCorrect);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n  render() {\r\n    return (\r\n      <div className='Quiz'>\r\n        {showScore ? (\r\n          <div className='score-section'>\r\n            You scored {answers} out of {questions.length}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz; */","map":{"version":3,"sources":["C:/Users/sydne/Documents/Code/FoodApp/final/src/components/Quiz.jsx"],"names":["React","Component","useState","useEffect","Quiz","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAMD;;AAR0B;;AAU7B,eAAeD,IAAf;AAEA","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\n\r\nclass Quiz extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz\">\r\n        This is the Quiz.\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default Quiz;\r\n    \r\n/*  \r\n  static get questions() {\r\n    return ( \r\n      {\r\n        questionText: 'What zones are you willing to venture out to?',\r\n        answerOptions: [\r\n          { answerText: 'A', isCorrect: 'A' },\r\n          { answerText: 'B', isCorrect: 'B' },\r\n          { answerText: 'C', isCorrect: 'C' },\r\n          { answerText: 'D', isCorrect: 'D' }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Boujie or Ballin’ on a Budget?',\r\n        answerOptions: [\r\n          { answerText: '$', isCorrect: '$' },\r\n          { answerText: '$$', isCorrect: '$$', },\r\n          { answerText: '$$$', isCorrect: '$$$', },\r\n          { answerText: '$$$$', isCorrect: '$$$$', },\r\n          { answerText: '$$$$$', isCorrect: '$$$$$', }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Any cravings?',\r\n        answerOptions: [\r\n          { answerText: 'Italian', isCorrect: 'Italian' },\r\n          { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n          { answerText: 'Indian', isCorrect: 'Indian' },\r\n          { answerText: 'French', isCorrect: 'French' },\r\n          { answerText: 'America', isCorrect: 'America' },\r\n          { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n          { answerText: 'Thai', isCorrect: 'Thai' },\r\n          { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n          { answerText: 'Mexican', isCorrect: 'Mexican' }\r\n        ]\r\n      },\r\n      {\r\n        questionText: 'Preferring Vegetarian?',\r\n        answerOptions: [\r\n          { answerText: 'Yes', isCorrect: 'Yes' },\r\n          { answerText: 'No', isCorrect: 'No' }\r\n        ]\r\n      }\r\n    )\r\n  }\r\n  \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n  \r\n    handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        answers.push(isCorrect);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n  render() {\r\n    return (\r\n      <div className='Quiz'>\r\n        {showScore ? (\r\n          <div className='score-section'>\r\n            You scored {answers} out of {questions.length}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz; */"]},"metadata":{},"sourceType":"module"}