{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sydne\\\\Documents\\\\Code\\\\FoodApp\\\\final\\\\src\\\\components\\\\Quiz.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\n/* static get questions() {\r\n  return ( */\n\nexport const questions = [{\n  questionText: 'What zones are you willing to venture out to?',\n  answerOptions: [{\n    answerText: 'A',\n    isCorrect: 'A'\n  }, {\n    answerText: 'B',\n    isCorrect: 'B'\n  }, {\n    answerText: 'C',\n    isCorrect: 'C'\n  }, {\n    answerText: 'D',\n    isCorrect: 'D'\n  }]\n}, {\n  questionText: 'Boujie or Ballin’ on a Budget?',\n  answerOptions: [{\n    answerText: '$',\n    isCorrect: '$'\n  }, {\n    answerText: '$$',\n    isCorrect: '$$'\n  }, {\n    answerText: '$$$',\n    isCorrect: '$$$'\n  }, {\n    answerText: '$$$$',\n    isCorrect: '$$$$'\n  }, {\n    answerText: '$$$$$',\n    isCorrect: '$$$$$'\n  }]\n}, {\n  questionText: 'Any cravings?',\n  answerOptions: [{\n    answerText: 'Italian',\n    isCorrect: 'Italian'\n  }, {\n    answerText: 'Chinese',\n    isCorrect: 'Chinese'\n  }, {\n    answerText: 'Indian',\n    isCorrect: 'Indian'\n  }, {\n    answerText: 'French',\n    isCorrect: 'French'\n  }, {\n    answerText: 'America',\n    isCorrect: 'America'\n  }, {\n    answerText: 'Japanese',\n    isCorrect: 'Japanese'\n  }, {\n    answerText: 'Thai',\n    isCorrect: 'Thai'\n  }, {\n    answerText: 'Brazilian',\n    isCorrect: 'Brazilian'\n  }, {\n    answerText: 'Mexican',\n    isCorrect: 'Mexican'\n  }]\n}, {\n  questionText: 'Preferring Vegetarian?',\n  answerOptions: [{\n    answerText: 'Yes',\n    isCorrect: 'Yes'\n  }, {\n    answerText: 'No',\n    isCorrect: 'No'\n  }]\n}];\nconst [currentQuestion, setCurrentQuestion] = useState(0);\nconst [showScore, setShowScore] = useState(false);\nconst [answers, setAnswers] = useState([]);\n\nhandleAnswerOptionClick = isCorrect => {\n  if (isCorrect) {\n    answers.push(isCorrect);\n  }\n\n  const nextQuestion = currentQuestion + 1;\n\n  if (nextQuestion < questions.length) {\n    setCurrentQuestion(nextQuestion);\n  } else {\n    setShowScore(true);\n  }\n};\n\nclass Quiz extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"You scored \", answers, \" out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, answerOption.answerText)))));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/sydne/Documents/Code/FoodApp/final/src/components/Quiz.jsx"],"names":["React","Component","useState","useEffect","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","answers","setAnswers","handleAnswerOptionClick","push","nextQuestion","length","Quiz","render","map","answerOption"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\n\r\n/* static get questions() {\r\n  return ( */\r\nexport const questions = [\r\n\r\n    {\r\n      questionText: 'What zones are you willing to venture out to?',\r\n      answerOptions: [\r\n        { answerText: 'A', isCorrect: 'A' },\r\n        { answerText: 'B', isCorrect: 'B' },\r\n        { answerText: 'C', isCorrect: 'C' },\r\n        { answerText: 'D', isCorrect: 'D' }\r\n      ]\r\n    },\r\n    {\r\n      questionText: 'Boujie or Ballin’ on a Budget?',\r\n      answerOptions: [\r\n        { answerText: '$', isCorrect: '$' },\r\n        { answerText: '$$', isCorrect: '$$', },\r\n        { answerText: '$$$', isCorrect: '$$$', },\r\n        { answerText: '$$$$', isCorrect: '$$$$', },\r\n        { answerText: '$$$$$', isCorrect: '$$$$$', }\r\n      ]\r\n    },\r\n    {\r\n      questionText: 'Any cravings?',\r\n      answerOptions: [\r\n        { answerText: 'Italian', isCorrect: 'Italian' },\r\n        { answerText: 'Chinese', isCorrect: 'Chinese' },\r\n        { answerText: 'Indian', isCorrect: 'Indian' },\r\n        { answerText: 'French', isCorrect: 'French' },\r\n        { answerText: 'America', isCorrect: 'America' },\r\n        { answerText: 'Japanese', isCorrect: 'Japanese' },\r\n        { answerText: 'Thai', isCorrect: 'Thai' },\r\n        { answerText: 'Brazilian', isCorrect: 'Brazilian' },\r\n        { answerText: 'Mexican', isCorrect: 'Mexican' }\r\n      ]\r\n    },\r\n    {\r\n      questionText: 'Preferring Vegetarian?',\r\n      answerOptions: [\r\n        { answerText: 'Yes', isCorrect: 'Yes' },\r\n        { answerText: 'No', isCorrect: 'No' }\r\n      ]\r\n    }\r\n];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      answers.push(isCorrect);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n\r\nclass Quiz extends Component {\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className='Quiz'>\r\n        {showScore ? (\r\n          <div className='score-section'>\r\n            You scored {answers} out of {questions.length}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}